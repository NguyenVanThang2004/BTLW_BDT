@inject BTLW_BDT.Models.BtlLtwQlbdtContext _context
@{
    ViewData["Title"] = "Checkout";
    Layout = "~/Views/Shared/_LayoutCart.cshtml";

    var ngaySinh = Context.Session.GetString("NgaySinh");
    var ngaySinhFormatted = "";
    if (!string.IsNullOrEmpty(ngaySinh))
    {
        DateTime date;
        if (DateTime.TryParse(ngaySinh, out date))
        {
            ngaySinhFormatted = date.ToString("yyyy-MM-dd");
        }
    }
}

@model List<BTLW_BDT.Models.ChiTietGioHang>

<div class="row px-xl-5">
    <div class="col-lg-8">
        <div class="mb-4">
            <h4 class="font-weight-semi-bold mb-4">Billing Address</h4>
            <div class="row">
                <div class="col-md-6 form-group">
                    <label>Tên Khách Hàng</label>
                    <input class="form-control" type="text"
                           value="@Context.Session.GetString("HoTen")"
                           readonly>
                </div>
                <div class="col-md-6 form-group">
                    <label>Ngày Sinh</label>
                    <input class="form-control" type="date"
                           value="@ngaySinhFormatted">
                </div>
                <div class="col-md-6 form-group">
                    <label>Số Điện Thoại</label>
                    <input class="form-control" type="text"
                           value="@Context.Session.GetString("SoDienThoai")"
                           readonly>
                </div>
                <div class="col-md-6 form-group">
                    <label>Địa chỉ</label>
                    <input class="form-control" type="text"
                           value="@Context.Session.GetString("DiaChi")">
                </div>
                <div class="col-md-6 form-group">
                    <label>Ghi Chú</label>
                    <textarea class="form-control" rows="4" cols="50">@Context.Session.GetString("GhiChu")</textarea>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-4">
        <div class="card border-secondary mb-5">
            <div class="card-header bg-secondary border-0">
                <h4 class="font-weight-semi-bold m-0">Order Total</h4>
            </div>
            <div class="card-body">
                <h5 class="font-weight-medium mb-3">Products</h5>

                @foreach (var item in Model)
                {
                    var sanPham = _context.SanPhams.FirstOrDefault(s => s.MaSanPham == item.MaSanPham);
                    var mauSac = _context.MauSacs.FirstOrDefault(m => m.MaMau == item.ThongSoMau);
                    var rom = _context.Roms.FirstOrDefault(r => r.MaRom == item.ThongSoRom);
                    var danhSachRom = _context.Roms.Where(r => r.MaSanPham == item.MaSanPham).ToList();
                    var baseRom = danhSachRom.OrderBy(r => r.Gia).FirstOrDefault();

                    decimal baseRomGia = baseRom?.Gia.GetValueOrDefault() ?? 0;
                    decimal selectedRomGia = rom?.Gia.GetValueOrDefault() ?? 0;
                    decimal donGia = (selectedRomGia - baseRomGia) + sanPham.DonGiaBanRa.GetValueOrDefault();
                    var tongTien = donGia * (item.SoLuong ?? 0);

                    <div class="d-flex justify-content-between">
                        <p>@sanPham?.TenSanPham (@mauSac?.TenMau - @rom?.ThongSo)</p>
                        <p>@Convert.ToDouble(tongTien).ToString("N0") VNĐ</p>
                    </div>
                }

                <hr class="mt-0">
                <div class="d-flex justify-content-between mb-3 pt-1">
                    <h6 class="font-weight-medium">Subtotal</h6>
                    <h6 class="font-weight-medium">
                        @{
                            var totalAmount = Model.Sum(item =>
                            {
                                var sp = _context.SanPhams.FirstOrDefault(s => s.MaSanPham == item.MaSanPham);
                                var danhSachRom = _context.Roms.Where(r => r.MaSanPham == item.MaSanPham).ToList();
                                var baseRom = danhSachRom.OrderBy(r => r.Gia).FirstOrDefault();
                                var selectedRom = _context.Roms.FirstOrDefault(r => r.MaRom == item.ThongSoRom);

                                decimal baseRomGia = baseRom?.Gia.GetValueOrDefault() ?? 0;
                                decimal selectedRomGia = selectedRom?.Gia.GetValueOrDefault() ?? 0;
                                decimal donGia = (selectedRomGia - baseRomGia) + sp.DonGiaBanRa.GetValueOrDefault();

                                return donGia * (item.SoLuong ?? 0);
                            });
                        }
                        @Convert.ToDouble(totalAmount).ToString("N0") VNĐ
                    </h6>
                </div>
                <div class="d-flex justify-content-between">
                    <h6 class="font-weight-medium">Shipping</h6>
                    <h6 class="font-weight-medium">25,000 VNĐ</h6>
                </div>
            </div>
            <div class="card-footer border-secondary bg-transparent">
                <div class="d-flex justify-content-between mt-2">
                    <h5 class="font-weight-bold">Total</h5>
                    <h5 class="font-weight-bold">
                        @Convert.ToDouble(totalAmount + 25000).ToString("N0") VNĐ
                    </h5>
                </div>
            </div>
        </div>

        <form asp-controller="Checkout" asp-action="PlaceOrder" method="post">
            <input type="hidden" id="paymentMethod" name="paymentMethod" value="Pay at store" />
            <input type="hidden" id="ghiChu" name="ghiChu" />

            <div class="payment-info">
                <div class="payment-selection" onclick="openModal()">
                    <img src="../assets/img/how-pay-icon.png" alt="Icon" class="icon" id="selectedIcon">
                    <div class="payment-text">
                        <p id="selectedMethod">Pay at store</p>
                    </div>
                    <span class="change-text">change &gt;</span>
                </div>
            </div>

            <div class="modal" id="paymentModal">
                <div class="modal-content">
                    <span class="close" onclick="closeModal()">&times;</span>
                    <h2>Select Payment Method</h2>
                    <div class="payment-options">
                        <div class="option" onclick="selectMethod('Pay at store', '../assets/img/store-icon.png')">
                            <img src="../assets/img/store-icon.png" alt="Store" class="option-icon">
                            <span>Pay at store</span>
                        </div>
                        <div class="option" onclick="selectMethod('Bank transfer via QR code', '../assets/img/qr-icon.png')">
                            <img src="../assets/img/qr-icon.png" alt="QR Code" class="option-icon">
                            <span>Bank transfer via QR code</span>
                        </div>
                    </div>
                    <button class="confirm-btn" type="button" onclick="confirmSelection()">Confirm</button>
                </div>
            </div>
              <div class="card-footer border-secondary bg-transparent">
                <button type="submit" class="btn btn-lg btn-block btn-primary font-weight-bold my-3 py-3">
                    Place Order
                </button>
            </div>
        </form>
    </div>
</div>

<style>
    /* Payment info section */
    .payment-info {
        padding: 20px;
    }

    .payment-selection {
        display: flex;
        align-items: center;
        background-color: #fff;
        padding: 15px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        cursor: pointer;
        transition: background-color 0.3s, transform 0.1s;
    }

        .payment-selection:hover {
            background-color: #f5f5f5;
            transform: scale(1.02);
        }

    /* Icon next to payment method */
    .icon {
        width: 40px;
        height: 40px;
        margin-right: 15px;
    }

    /* Payment text styling */
    .payment-text p {
        margin: 0;
        font-weight: bold;
        font-size: 18px;
        color: #333;
    }

    .change-text {
        margin-left: auto;
        color: #007bff;
        font-weight: bold;
        cursor: pointer;
        transition: color 0.2s;
    }

        .change-text:hover {
            color: #0056b3;
        }

    /* Modal styles */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
        background-color: white;
        margin: 10% auto;
        padding: 25px;
        width: 90%;
        max-width: 400px;
        border-radius: 12px;
        position: relative;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        text-align: center;
    }

    .close {
        position: absolute;
        right: 15px;
        top: 10px;
        font-size: 28px;
        cursor: pointer;
    }

    .payment-options {
        margin-top: 20px;
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

        .payment-options .option {
            display: flex;
            align-items: center;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 8px;
            cursor: pointer;
            transition: background-color 0.3s, transform 0.1s;
        }

            .payment-options .option:hover {
                background-color: #e9ecef;
                transform: scale(1.03);
            }

    .option-icon {
        width: 40px;
        height: 40px;
        margin-right: 15px;
    }

    .payment-options .option.selected {
        background-color: #d1e7dd;
        color: #0f5132;
        font-weight: bold;
    }

    .confirm-btn {
        margin-top: 20px;
        width: 100%;
        padding: 12px 0;
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 5px;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        .confirm-btn:hover {
            background-color: #45a049;
        }
</style>

<script>
    let selectedMethodText = 'Pay at store';
    let selectedIconSrc = '../assets/img/how-pay-icon.png';
    let currentSelectedElement = null;

    function openModal() {
        document.getElementById('paymentModal').style.display = 'block';
    }

    function closeModal() {
        document.getElementById('paymentModal').style.display = 'none';
    }

    function selectMethod(method, icon) {
        selectedMethodText = method;
        selectedIconSrc = icon;

        if (currentSelectedElement) {
            currentSelectedElement.classList.remove('selected');
        }

        event.target.classList.add('selected');
        currentSelectedElement = event.target;

        document.getElementById('paymentMethod').value = method;
    }

    function confirmSelection() {
        document.getElementById('selectedMethod').textContent = selectedMethodText;
        document.getElementById('selectedIcon').src = selectedIconSrc;
        closeModal();
    }

    function confirmSelection() {
        // Lấy giá trị ghi chú từ textarea
        var ghiChu = document.querySelector('textarea').value;
        document.getElementById('ghiChu').value = ghiChu;

        document.getElementById('selectedMethod').textContent = selectedMethodText;
        document.getElementById('selectedIcon').src = selectedIconSrc;
        closeModal();
    }

</script>