@using BTLW_BDT.Models;
@model HoaDonBan;
@{
    ViewData["title"] = "DashBoard";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>
        DsshBoard
    </title>
    <style>
        .filter-select {
            width: 15%;
            padding: 10px; 
            border: 1px solid #ced4da; 
            border-radius: 5px; 
            font-size: 16px; 
            background-color: #ffffff; 
            transition: border-color 0.3s; 
        }

            .filter-select:focus {
                border-color: #80bdff; 
                outline: none; 
            }
    </style>
</head>
<body>
    <h3>DashBoard Statistic</h3>
    <div class="row">
        <div class="col-md-3">
            <p> Thống kê sản phẩm</p>
            @ViewBag.CountProduct
        </div>
        <div class="col-md-3">
            <p> Thống kê hóa đơn bán</p>
            @ViewBag.CountCTHDB
        </div>
        <div class="col-md-3">
            <p> Thống kê giỏ hàng</p>
            @ViewBag.CountCTGH
        </div>
        <div>
            <h4>Lọc dữ liệu theo:</h4>
            <select class="filter-select">
                <option value="30">---Lọc dữ liệu---</option>
                <option value="7">7 ngày trước</option>
                <option value="30"> tháng qua</option>
                <option value="90">1 tháng trước</option>
                <option value="365">1 năm</option>
            </select>
        </div>

    </div>
    <div class="col-md-12">
        <p> Biểu đồ thống kê</p>
        <div id="myfirstchart" style="height:250px; width: 60%;"></div>
    </div>
</body>

@section Scripts {
    <script>
        $(document).ready(function () {
            var ChartMorris = new Morris.Line({
                element: 'myfirstchart',
                data:[],
                xkey: 'date',
                xLabelFormat: function (x) {
                    return new Date(x).toLocaleDateString();
                },
                ykeys: ['sold', 'quantity', 'profit'],
                labels: ["Số lượng bán ra", "Doanh thu", "Lợi nhuận"]
            });

            $.ajax({
                url: "@Url.Action("GetChartData", "Admin")",

                datatype: "json",
                type: "POST",
                success: function (data) {
                    if (data) {
                        ChartMorris.setData(data.map(function (item) {
                            return {
                                date: item.date,
                                sold: item.sold,
                                quantity: item.quantity,

                                profit: item.profit
                            };
                        }));
                    } else {
                        console.warn("No data received for Morris chart update.");
                        ChartMorris.setData([]);
                    }
                },
                error: function (error) {
                    console.error("Error fetching data:", error);
                }
            });
            $('.filter-select').on('change', function () {
                var days = $(this).val(); // Lấy giá trị số ngày từ phần tử được chọn
                var endDate = new Date(); // Tạo đối tượng Date cho ngày hiện tại
                var startDate = new Date(endDate.getTime() - days * 24 * 60 * 60 * 1000); // Tính toán ngày bắt đầu

                function loadChartData() {
                    console.log("Loading chart data...");
                    $.ajax({
                        url: "@Url.Action("GetChartDataBySelect", "Admin")", // Đường dẫn đến phương thức trong controller
                        type: 'POST', // Phương thức HTTP là POST
                        data: {
                            startDate: startDate.toISOString().split('T')[0], // Chuyển đổi ngày bắt đầu thành chuỗi ISO
                            endDate: endDate.toISOString().split('T')[0] // Chuyển đổi ngày kết thúc thành chuỗi ISO
                        },
                        success: function (data) {
                            if (data) {
                                // Cập nhật biểu đồ với dữ liệu mới
                                ChartMorris.setData(data.map(function (item) {
                                    return {
                                        date: item.date,
                                        sold: item.sold,
                                        quantity: item.quantity,
                                        profit: item.profit
                                    };
                                }));
                            } else {
                                console.warn("No data received for Morris chart update.");
                                ChartMorris.setData([]);
                            }
                        },
                        error: function (error) {
                            console.error("Error fetching data:", error);
                        }
                    });
                }
                loadChartData(); // Tải dữ liệu lần đầu khi trang load
                setInterval(loadChartData, 10000); // Tải lại dữ liệu mỗi 10 giây (10,000 ms)
            });
        });
               
    </script>
}
</html>
